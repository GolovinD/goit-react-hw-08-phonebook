"use strict";(self.webpackChunkgoit_react_hw_08_phonebook=self.webpackChunkgoit_react_hw_08_phonebook||[]).push([[521],{2521:function(e,n,t){t.r(n),t.d(n,{default:function(){return k}});var r=t(4270),a=t(2791),u=t(9434),o=t(3634),i=t(9439),c="NOT_FOUND";var l=function(e,n){return e===n};function s(e,n){var t="object"===typeof n?n:{equalityCheck:n},r=t.equalityCheck,a=void 0===r?l:r,u=t.maxSize,o=void 0===u?1:u,i=t.resultEqualityCheck,s=function(e){return function(n,t){if(null===n||null===t||n.length!==t.length)return!1;for(var r=n.length,a=0;a<r;a++)if(!e(n[a],t[a]))return!1;return!0}}(a),f=1===o?function(e){var n;return{get:function(t){return n&&e(n.key,t)?n.value:c},put:function(e,t){n={key:e,value:t}},getEntries:function(){return n?[n]:[]},clear:function(){n=void 0}}}(s):function(e,n){var t=[];function r(e){var r=t.findIndex((function(t){return n(e,t.key)}));if(r>-1){var a=t[r];return r>0&&(t.splice(r,1),t.unshift(a)),a.value}return c}return{get:r,put:function(n,a){r(n)===c&&(t.unshift({key:n,value:a}),t.length>e&&t.pop())},getEntries:function(){return t},clear:function(){t=[]}}}(o,s);function p(){var n=f.get(arguments);if(n===c){if(n=e.apply(null,arguments),i){var t=f.getEntries(),r=t.find((function(e){return i(e.value,n)}));r&&(n=r.value)}f.put(arguments,n)}return n}return p.clearCache=function(){return f.clear()},p}function f(e){var n=Array.isArray(e[0])?e[0]:e;if(!n.every((function(e){return"function"===typeof e}))){var t=n.map((function(e){return"function"===typeof e?"function "+(e.name||"unnamed")+"()":typeof e})).join(", ");throw new Error("createSelector expects all input-selectors to be functions, but received the following types: ["+t+"]")}return n}function p(e){for(var n=arguments.length,t=new Array(n>1?n-1:0),r=1;r<n;r++)t[r-1]=arguments[r];var a=function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];var u,o=0,i={memoizeOptions:void 0},c=r.pop();if("object"===typeof c&&(i=c,c=r.pop()),"function"!==typeof c)throw new Error("createSelector expects an output function after the inputs, but received: ["+typeof c+"]");var l=i,s=l.memoizeOptions,p=void 0===s?t:s,d=Array.isArray(p)?p:[p],m=f(r),v=e.apply(void 0,[function(){return o++,c.apply(null,arguments)}].concat(d)),h=e((function(){for(var e=[],n=m.length,t=0;t<n;t++)e.push(m[t].apply(null,arguments));return u=v.apply(null,e)}));return Object.assign(h,{resultFunc:c,memoizedResultFunc:v,dependencies:m,lastResult:function(){return u},recomputations:function(){return o},resetRecomputations:function(){return o=0}}),h};return a}var d=p(s),m=function(e){return e.contacts.items},v=function(e){return e.filter.query},h=d([m,v],(function(e,n){return e.filter((function(e){return e.name.toLowerCase().includes(n.toLowerCase())}))})),y="ContactForm_form__dhl+T",b=t(184),x=function(){var e=(0,a.useState)(""),n=(0,i.Z)(e,2),t=n[0],r=n[1],c=(0,a.useState)(""),l=(0,i.Z)(c,2),s=l[0],f=l[1],p=(0,u.I0)(),d=(0,u.v9)(m);console.log(d);return(0,b.jsx)("div",{children:(0,b.jsxs)("form",{className:y,onSubmit:function(e){e.preventDefault(),function(e,n){if(console.log(e),d.find((function(n){return n.name.toLowerCase()===e.toLowerCase()})))return alert("".concat(e," is already in contacts.")),!1;var t={name:e,number:s};console.log(t),p((0,o.uK)(t))}(t),console.log(t),""!==t&&""!==s&&(r(""),f(""))},children:[(0,b.jsxs)("label",{children:["Name",(0,b.jsx)("input",{type:"text",value:t,onChange:function(e){console.log(e.target.value),r(e.target.value),console.log(t)},name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0})]}),(0,b.jsxs)("label",{children:["Number",(0,b.jsx)("input",{type:"tel",value:s,onChange:function(e){f(e.target.value)},name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0})]}),(0,b.jsx)("button",{className:"btn",type:"submit",children:"Add contact"})]})})},g="ContactItem_contact__C4k7V",j=function(e){var n=e.id,t=e.name,r=e.number,a=(0,u.I0)();return(0,b.jsxs)("li",{className:g,id:n,children:[(0,b.jsxs)("p",{children:[t,": ",(0,b.jsx)("span",{children:r})]}),(0,b.jsx)("button",{type:"button",onClick:function(){return a((0,o.GK)(n))},children:"Delete"})]})},_="ContactList_form__YbZHX",C=function(){var e=(0,u.v9)(h);return(0,b.jsx)("ul",{className:_,children:e.map((function(e){var n=e.id,t=e.name,r=e.number;return(0,b.jsx)(j,{id:n,name:t,number:r},n)}))})},A=t(1634),w={label:"Filter_label__vEd1E",input:"Filter_input__N7T3z",box:"Filter_box__d3XyP"},N=function(){var e=(0,u.I0)(),n=(0,u.v9)(v);return(0,b.jsx)("div",{className:w.box,children:(0,b.jsxs)("label",{className:w.label,children:[(0,b.jsx)("span",{className:w.labelName,children:"Find contacts by name"}),(0,b.jsx)("input",{className:w.input,type:"text",value:n,onChange:function(n){e((0,A.c)(n.currentTarget.value))},name:"filter",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0})]})})};function k(){var e=(0,u.I0)();return(0,a.useEffect)((function(){e((0,o.yF)())}),[e]),(0,b.jsxs)("div",{children:[(0,b.jsx)(r.q,{children:(0,b.jsx)("title",{children:"Contacts"})}),(0,b.jsx)(x,{}),(0,b.jsx)(N,{}),(0,b.jsx)(C,{})]})}}}]);
//# sourceMappingURL=521.a4d9ee6a.chunk.js.map